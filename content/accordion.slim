flags: hidden



ruby:

  @tree = []
  getting_started = {heading: "Getting Started"}
  gs = getting_started[:children] = []
    installation = []
  gs << {heading: "Installation", children: installation}
    installation << {href: "/docs/install", title:"Installation Guide"}
    installation << {href: "/docs/install/nuget", title: "Installation with Nuget"}
    installation << {href: "/docs/workswith", title: "CMS and Compatibility Guide"}
    installation << {href: "/docs/cloud", title: "Cloud Architecture Guide"}
    installation << {href: "/docs/redist", title: "Integration and Redistribution Guide"}
    installation << {href: "/plugins/install", title: "Installing a Plugin"}
    use = []
  gs << {heading: "Use", children: use}
    use << {href: "/docs/basics", title: "Basic Commands"}
    use << {href: "/benefits/comprehensive", title: "Advanced Features"}
    use << {href: "/docs/best-practices", title: "Best Practices Guide"}
    use << {href: "/docs/reference", title: "Full Command Reference"}
    use << {href: "/docs/configuration", title: "Configuration Reference"}
    use << {href: "/docs/managed", title: "Managed API Uses"}

  @tree << getting_started

  troubleshooting = {heading: "Troubleshooting"}
  t = troubleshooting[:children] = []
  t << {href: "/docs/faq", title: "FAQ"}
  t << {href: "/docs/troubleshoot", title: "Troubleshooting Guide"}
  t << {href: "/search", title: "Search our Site"}
  t << {href: "http://stackoverflow.com/question/tagged/imageresizer", title: "StackOverflow:ImageResizer"}
  t << {href: "/docs/geterror", title: "Getting Detailed Error Messages"}
  t << {href: "/plugins/diagnostics", title: "Accessing Self-Diagnostics"}
  t << {href: "/support", title: "Support Page"}
  t << {href: "/docs/install/classicmode", title: "Running on IIS or IIS7 Classic Mode"}

  @tree << troubleshooting

  tutorials = {heading: "Tutorials"}
  tut = tutorials[:children] = []
  tut << {href: "/docs/tutorials", title: "Tutorials Page"}
  tut << {href: "http://www.nathanaeljones.com/blog/2011/combining-jcrop-and-server-side-image-resizing", title: "Use jCrop to create a cropping UI in 11 lines"}
  tut << {href: "/docs/howto/watermark-by-folder-or-size", title: "Watermark images based on folder name or display size"}
  tut << {href: "/docs/howto/upload-and-resize", title: "Convert and resize images as they are uploaded"}
  tut << {href:"/docs/howto/generate-versions", title: "Generate thumbnails and multiple sizes to disk"}

  @tree << tutorials

  cmses = {heading: "CMS Notes"}
  cmses[:children]  = [{href: "/docs/workswith", title: "Compatibility Overview"}] + index.pages_tagged("cms")

  @tree << cmses

  extend = {heading: "Extend"}
  e = extend[:children] = []
  e << {href: "/docs/community", title: "Community Plugins, Articles and Feedback"}
  e << {href: "/docs/extend/basics", title: "Making a Simple Plugin"}
  e << {href: "/docs/extend/virtualimageprovider", title: "Making Your Own Source File Provider"}
  e << {href: "http://documentation.imageresizing.net/doxygen/namespaces.html", title: "Full generated documentation for the core and all plugins, with graphs"}
  e << {href: "http://documentation.imageresizing.net/docu/", title: "Simple generated documentation for the ImageResizer core"}

  @tree << extend

  plugins = {heading: "Plugins"}
  plugins[:children] = editions.map do |e|
    {heading: e.heading, children: [e] + e.edition_plugins.map{|c| {title: c.heading, href: c.path}}}
  end


  @tree << plugins

  legacy = {heading: "Legacy"}
  l = legacy[:children] = []
  l << {heading: "Releases", children: [{href: "/releases"}] + releases}
    op = []
  l << {heading: "Older Policies", children: op}
    op << {href: "/plugins/bundles", title: "Bundles Overview"}
    op << {href: "/plugins/bundles/free", title: "Free Bundle"}
    op << {href: "/plugins/bundles/1", title: "Performance Bundle"}
    op << {href: "/plugins/bundles/2", title: "Design Bundle"}
    op << {href: "/plugins/bundles/3", title: "Cloud Bundle"}
    op << {href: "/plugins/bundles/4", title: "Extras Bundle"}
    op << {href: "/plugins/bundles/contract", title: "Support Contract Plugins"}

  @tree << legacy

  def getPaths(n)
    n = {href: n.path} if n.is_a?(Hardwired::Template)
    return [] if n.nil?
    return [n[:href]] if n[:children].nil?
    [n[:path]] + n[:children].map{|c| getPaths(c)}
  end
  allpaths = getPaths({children:@tree}).compact.flatten
  

  uncategorized = index.pages.reject { |p| allpaths.include?(p.path) || !(p.path.start_with?('/docs') || p.path.start_with?('/plugins'))}

  @tree << {heading: "uncategorized", children: uncategorized}






ul.nav.nav-list
  - @tree.each do |n|
    == partial :accordion_node, :locals => { :node => n}
